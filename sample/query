query := `
WITH my_location AS (
  SELECT 
      CASE 
          WHEN is_gps = true THEN location::geometry
          ELSE location_alternative::geometry
      END as geom
  FROM user_location 
  WHERE user_id = $1
),
my_info AS (
  SELECT gender, sexuality 
  FROM user_info 
  WHERE user_id = $1
),
my_tags AS (
  SELECT array_agg(tag_id) as tag_ids
  FROM user_tags
  WHERE user_id = $1
),
user_tag_groups AS (
  SELECT 
      ut.user_id,
      array_agg(ut.tag_id) as tag_ids
  FROM user_tags ut
  GROUP BY ut.user_id
)
SELECT DISTINCT 
  ui.user_id,
  ui.birthdate,
  EXTRACT(YEAR FROM AGE(CURRENT_DATE, ui.birthdate)) as age,
  ui.area,
  img.profile_image_path1,
  COALESCE(utg.tag_ids, ARRAY[]::integer[]) as tag_ids,
  cardinality(
      ARRAY(
          SELECT UNNEST(COALESCE(utg.tag_ids, ARRAY[]::integer[])) 
          INTERSECT 
          SELECT UNNEST((SELECT tag_ids FROM my_tags))
      )
  ) as common_tag_count,
  ST_Y(CASE 
      WHEN ul.is_gps = true THEN ul.location::geometry
      ELSE ul.location_alternative::geometry
  END) as latitude,
  ST_X(CASE 
      WHEN ul.is_gps = true THEN ul.location::geometry
      ELSE ul.location_alternative::geometry
  END) as longitude,
  ST_Distance(
      CASE 
          WHEN ul.is_gps = true THEN ul.location
          ELSE ul.location_alternative
      END,
      (SELECT geom::geography FROM my_location)
  ) as distance
FROM user_info ui
JOIN users u ON ui.user_id = u.id
LEFT JOIN user_image img ON ui.user_id = img.user_id
LEFT JOIN user_location ul ON ui.user_id = ul.user_id
LEFT JOIN user_tag_groups utg ON ui.user_id = utg.user_id
CROSS JOIN my_info mi 
WHERE ui.user_id != $1
AND u.is_registered = true
AND u.is_preparation = true
AND EXTRACT(YEAR FROM AGE(CURRENT_DATE, ui.birthdate)) BETWEEN $4 AND $5
AND cardinality(
  ARRAY(
      SELECT UNNEST(COALESCE(utg.tag_ids, ARRAY[]::integer[])) 
      INTERSECT 
      SELECT UNNEST((SELECT tag_ids FROM my_tags))
  )
) >= $6
AND (
  (mi.gender = ui.sexuality OR ui.sexuality = 'male/female')
  AND
  (mi.sexuality = ui.gender OR mi.sexuality = 'male/female')
)
AND ST_Distance(
  CASE 
      WHEN ul.is_gps = true THEN ul.location
      ELSE ul.location_alternative
  END,
  (SELECT geom::geography FROM my_location)
) BETWEEN $2 AND $3
AND NOT EXISTS (
  SELECT 1 FROM user_blocks
  WHERE (blocker_id = $1 AND blocked_id = ui.user_id)
     OR (blocker_id = ui.user_id AND blocked_id = $1)
)
AND NOT EXISTS (
  SELECT 1 FROM report_fake_accounts
  WHERE (reporter_id = $1 AND fake_account_id = ui.user_id)
     OR (reporter_id = ui.user_id AND fake_account_id = $1)
)
AND NOT EXISTS (
  SELECT 1 FROM user_friends
  WHERE (user_id1 = LEAST($1, ui.user_id) AND user_id2 = GREATEST($1, ui.user_id))
)
AND NOT EXISTS (
  SELECT 1 FROM user_likes
  WHERE liker_id = $1 AND liked_id = ui.user_id
)
`